name: Github action to create EKS cluster using eksctl and install DOP on it
on:
  pull_request:
    types: [opened, closed]

jobs:
  lint_checker:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v2
      with:
        version: v1.29

    - name: Run Shellcheck
      uses: bewuethr/shellcheck-action@v2
    
    - name: Linter
      run: |
        curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.31.0
        golangci-lint --version
  
  build:
    runs-on: ubuntu-latest
    steps:    
    - name: Checkout code
      uses: actions/checkout@v2

    # - name: Install eksctl
    #   run: |
    #     chmod +x ./eksctl/install.sh
    #     ./eksctl/install.sh
  
    # - name: Configure AWS credentials
    #   run: |
    #     chmod +x ./eks/aws-credentials.sh
    #     ./eks/aws-credentials.sh
    #   env:
    #     ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     SECRET_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     REGION: ${{ secrets.AWS_DEFAULT_REGION }}

    # - name: Create EKS cluster
    #   run: |
    #     chmod +x ./eks/create.sh
    #     ./eks/create.sh
    #   env:
    #     VERSION: ${{ secrets.VERSION }}
    #     REGION: ${{ secrets.AWS_DEFAULT_REGION }}

    # - name: Install kubera on cluster
    #   run: |
    #     chmod +x ./kubera/install/install_kubera_on_eks.sh
    #     ./kubera/install/install_kubera_on_eks.sh
    #   env:
    #     DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}
    #     DOCKER_PASS: ${{ secrets.DOCKER_PASSWORD }}
    #     GIT_USERNAME: ${{ secrets.GIT_USERNAME }}
    #     GIT_PASSWORD: ${{ secrets.GIT_PASSWORD }}
    #     KUBERA_BRANCH: ${{ secrets.KUBERA_BRANCH }}
    #     RELEASE: ${{ secrets.RELEASE }}
    #     USE_KUBERA_REPO: ${{ secrets.USE_KUBERA_REPO }}


    # - name: Apply d-operators based ci to the cluster
    #   run: |
    #     kubectl create -f ./ci/ci.yml

    # - name: Sanity check for kubera components
    #   run: |
    #     chmod +x ./scenarios/sanity/suite.sh
    #     ./scenarios/sanity/suite.sh

    # - name: kubera cleanup
    #   run: |
    #     chmod +x ./kubera/uninstall/dop-cleanup.sh
    #     ./kubera/uninstall/dop-cleanup.sh
      
    # - name: Cluster cleanup
    #   run: |
    #     eksctl delete cluster -f ./eks/cluster.yml
    #   if: always()
        